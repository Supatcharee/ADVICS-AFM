<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picIcon.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        Qk02DAAAAAAAADYAAAAoAAAAIAAAACAAAAABABgAAAAAAAAAAADEDgAAxA4AAAAAAAAAAAAA3uvv3uvv
        3uvv3uvvxmExrUkprUkprU0prU0prU0prU0prU0prU0prU0prU0prU0prU0prU0prU0prU0prU0prU0p
        rU0prU0prU0prU0prU0prU0prU0prVEp3uvv3uvv3uvv3uvv3uvvpVUxazApYzAxYzAxYzAxYzAxYzAx
        YzAxYzAxYzAxWjAxWjAxWjAxWjAxWjAxYzAxYzAxYzAxYzAxYzAxYzAxYzAxYzAxWjAxYywpcxAIaxwY
        3uvv3uvv3uvv3uvvMaK1ALLeAKbOAKbOAKbOAKbOAKbOAKbOAKbOAKbOAKbOAKbOAKbOAKbOAKbOAKbO
        AKbOAKbOAKbOAKbOAKbOAKbOAKbOAKbOAK7WALLeMWmEcxAIaxwY3uvv3uvvWpqcAK7WALLeALbeALLe
        ALLeALLeALLeALLeALLeALLeALbnALrnAMv/AMv/AMP3ALbnALbnALLeALLeALLeALLeALLeALLeALbn
        ALrnAMPvAM//UkVSaxgQ3uvv3uvvIbLOALbeALrnAMf3AMf3AMf3AMv3AMv3AMf3AMv3AMv3ANP/ANv/
        IWmEWmF7OZa1ANP/AMv/AMv3AMv3AMf3AMv3AMf3AMv3AMv3AMf3AMPvANP/MXWMcwwA3uvv3uvvALrn
        ALrnAMPvANf/ANv/ANf/ANf/ANf/ANf/ANf/ANv/AOf/IThKEAAAawgY/7K9Up6tAOf/ANf/ANf/ANf/
        ANf/ANf/ANf/COP/ANf/AMv3ANf/Sk1ajBBC3uvv3uvvAL7nAL7nAMPvANP/COP/ANf/ANP/ANP/ANP/
        ANP/ANv/AN//AAAAEAAAYxgxawgYWmF7AO//ANf/ANP/ANP/ANP/ANP/ANv/GO//ANf/AM//AMv3axgQ
        jBBC3uvv3uvv3uvvGLrWAL7nAMv3EOP/AN//ANf/ANP/ANf/ANf/ANv/AOv/EBghAAAAGAAAMQAAIVlz
        APP/ANf/ANf/ANf/ANf/ANf/EOv/GO//AM//AOP/MXWMhBwQ3uvv3uvv3uvv3uvvAL7nAL7nAMfvCN//
        EOv/ANv/ANf/ANf/ANv/ANv/AOv/AKrOEAAAAAAAIRghANf/AOP/ANv/ANv/ANf/ANf/AN//If//CN//
        ANP/AM/3YywppUUh3uvv3uvv3uvv3uvv3uvvAMfnAMfvANP3EO//COf/ANv/ANv/ANv/ANv/AN//AOv/
        AO//APf/AOv/AOv/ANv/ANv/ANv/ANv/ANf/GPP/If//ANf/AOP/KYqchBgI3uvv3uvv3uvv3uvv3uvv
        3uvvAMfvAMfvAMvvCN//EO//AN//ANv/ANv/ANv/AN//AOP/AOf/CKbGAOf/AOP/ANv/ANv/AN//ANv/
        AOP/Kf//COf/ANf/AN//YygprUkp3uvv3uvv3uvv3uvv3uvv3uvv3uvvEMfeAMvvANP3EO//COf/AN//
        AN//AN//AN//AOf/ANf/QhAYAN//AOv/AN//AN//AN//ANv/GPv/GPv/ANf/AOv/MYKUhBwI3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvvAMvnAMvnAM/vAOP/EPP/AOP/AN//AN//AOP/APP/CKbGQgAAAMvvAO//
        AOP/AN//AN//AOf/If//AOP/AN//ANf3YywprUkh3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvCMvn
        AMvnANf3EO//COv/AOP/AOP/AOf/AP//GHmMawAAAKrOAPv/AOf/AOP/AOP/EPf/GPv/ANf/AOv/KYqc
        hBgI3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvAMvnAMvnAM/vCOf/CPP/AOf/AOf/AOv/AP//
        EElaewAAEJKtAPv/AOf/AOP/AOf/GP//COf/ANv/AOP/YyQhpUUh3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvvEMfeAM/nANv3EPf/AOv/AOf/APP/AOv/IRghpU1aMVFjAPf/AOv/AOf/CPf/GP//
        AN//AO//KYqchBgI3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvAM/nAM/nANfvCPP/
        CPf/AOv/AP//AL7WIQAApU1aUjhCAPv/AO//AOv/GP//EPf/AOP/AOP/YzAxpUUh3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvANfnANfnAOf/EPv/APP/AP//AKK1KQAAayAxSiQ5AM/n
        APf/CPf/If//AOf/APP/KZqlhAwA3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvvANfnANfnANv3CPf/CP//AP//EElaKQAAQgAYQgAYEJKtAP//GP//EPv/AOf/APP/YywppTwh3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvCNPnANvvAOv/EP//AP//AAgQ
        GAAAOQAQQgAAIVlzAP//If//AO//APf/KZqlhBAI3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvvANfnANfnAOP3CP//CP//AAAAEAAAQgAYQgAAIThKEP//EP//AOv/APP/
        UjhCpTgY3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvANvv
        ANvvAPP/EP//AAAACAAAMQAIMQAAKU1aGP//APP/APv/GK61ewwA3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvANvvANvvAOP3CP//EKalAAAAAAAACAAAIePn
        EP//APP/APv/UkVCnDQY3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvvAOPvAOPvAPf/EP//APf/ALrGCP//If//APv/AP//GK61ewwI3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvAN/nAN/nAOv3CP//
        CP//AP//GP//EP//APf/AP//UkVCnDQY3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvAOPvAOfvAPf/EP//CP//Kf//APv/AP//GMPGcwwA3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvvAOPnAOPnAOv3GP//Mf//If//APf/AP//UkVCnDQY3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvAOfvAOvvEP//a///CP//AP//
        GMPGewwI3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvvAOvvAOvvAPv/Kf//AP//AP//SlFSpTwh3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvAPP3
        APf/AP//AP//GMPGrUUh3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvvCPf3AP//OdfGxmEx3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv3uvv
        3uvv3uvv
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAICAAAAEACACoCAAAJgAAABAQAAABAAgAaAUAAM4IAAAoAAAAIAAAAEAAAAABAAgAAAAAAIAE
        AAAAAAAAAAAAAAABAAAAAAAAAAAAAAAAvwAAvwAAAL+/AL8AAAC/AL8Av78AAMDAwACAgIAAAAD/AAD/
        AAAA//8A/wAAAP8A/wD//wAA////AAAAgAAAgAAAAICAAIAAAACAAIAAgIAAAAkJCQASEhIAHx8fACws
        LAA5OTkARUVFAFJSUgBfX18AbGxsAHh4eACFhYUAkpKSAJ+fnwCrq6sAuLi4AMXFxQDS0tIA3t7eAOvr
        6wD4+PgA8Pv/AKSgoADA3MAA8MqmAAAAPgAAAF0AAAB8AAAAmwAAALoAAADZAAAA8AAkJP8ASEj/AGxs
        /wCQkP8AtLT/AAAUPgAAHl0AACh8AAAymwAAPLoAAEbZAABV8AAkbf8ASIX/AGyd/wCQtf8AtM3/AAAq
        PgAAP10AAFR8AABpmwAAfroAAJPZAACq8AAktv8ASML/AGzO/wCQ2v8AtOb/AAA+PgAAXV0AAHx8AACb
        mwAAuroAANnZAADw8AAk//8ASP//AGz//wCQ//8AtP//AAA+KgAAXT8AAHxUAACbaQAAun4AANmTAADw
        qgAk/7YASP/CAGz/zgCQ/9oAtP/mAAA+FAAAXR4AAHwoAACbMgAAujwAANlGAADwVQAk/20ASP+FAGz/
        nQCQ/7UAtP/NAAA+AAAAXQAAAHwAAACbAAAAugAAANkAAADwAAAk/yQASP9IAGz/bACQ/5AAtP+0ABQ+
        AAAeXQAAKHwAADKbAAA8ugAARtkAAFXwAABt/yQAhf9IAJ3/bAC1/5AAzf+0ACo+AAA/XQAAVHwAAGmb
        AAB+ugAAk9kAAKrwAAC2/yQAwv9IAM7/bADa/5AA5v+0AD4+AABdXQAAfHwAAJubAAC6ugAA2dkAAPDw
        AAD//yQA//9IAP//bAD//5AA//+0AD4qAABdPwAAfFQAAJtpAAC6fgAA2ZMAAPCqAAD/tiQA/8JIAP/O
        bAD/2pAA/+a0AD4UAABdHgAAfCgAAJsyAAC6PAAA2UYAAPBVAAD/bSQA/4VIAP+dbAD/tZAA/820AD4A
        AABdAAAAfAAAAJsAAAC6AAAA2QAAAPAAAAD/JCQA/0hIAP9sbAD/kJAA/7S0AD4AFABdAB4AfAAoAJsA
        MgC6ADwA2QBGAPAAVQD/JG0A/0iFAP9snQD/kLUA/7TNAD4AKgBdAD8AfABUAJsAaQC6AH4A2QCTAPAA
        qgD/JLYA/0jCAP9szgD/kNoA/7TmAD4APgBdAF0AfAB8AJsAmwC6ALoA2QDZAPAA8AD/JP8A/0j/AP9s
        /wD/kP8A/7T/ACoAPgA/AF0AVAB8AGkAmwB+ALoAkwDZAKoA8AC2JP8Awkj/AM5s/wDakP8A5rT/ABQA
        PgAeAF0AKAB8ADIAmwA8ALoARgDZAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAAgH
        BwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwgACAcIDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8H
        CAAIBwgPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDwcIAAgHCA8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PBwgACAcIDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8HCAAIBwgPDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDwcIAAgHCA8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PBwgACAcIDw8PDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PDw8HCAAIBwgPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDwcIAAgHCA8PDw8PDw8PDw8P
        Dw8PDw8PDw8PDw8PDw8PBwgACAcIDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8HCAAIBwgPDw8PDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDwcIAAgHCA8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PBwgACAcIDw8P
        Dw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8HCAAIBwgPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDwcIAAgH
        CA8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PBwgACAcIDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8H
        CAAIBwgPDw8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDwcIAAgHCA8PDw8PDw8PDw8PDw8PDw8PDw8PDw8P
        Dw8PBwgACAcICAgICAgICAgICAgICAgICAgICAgICAgICAgHCAAIBwcHBwcHBwcHBwcHBwcHBwcHBwcH
        BwcHBwcHBwcIAAgHBAQEBAQEBAQEBAQEBAQEBAQEBAAAAAAAAAAAAAgACAcEBAQEBAQEBAQEBAQEBAQE
        BAQEBwcABwcABwcACAAIBwQEBAQEBAQEBAQEBAQEBAQEBAQHBwAHBwAHBwAIAAgHBAQEBAQEBAQEBAQE
        BAQEBAQEBAQEBAQEBAQEBAgACAcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHBwcHCAAICAgICAgICAgI
        CAgICAgICAgICAgICAgICAgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD//////////ygAAAAQAAAAIAAAAAEACAAAAAAAQAEAAAAA
        AAAAAAAAAAEAAAAAAAAAAAAAAAC/AAC/AAAAv78AvwAAAL8AvwC/vwAAwMDAAICAgAAAAP8AAP8AAAD/
        /wD/AAAA/wD/AP//AAD///8AAACAAACAAAAAgIAAgAAAAIAAgACAgAAACQkJABISEgAfHx8ALCwsADk5
        OQBFRUUAUlJSAF9fXwBsbGwAeHh4AIWFhQCSkpIAn5+fAKurqwC4uLgAxcXFANLS0gDe3t4A6+vrAPj4
        +ADw+/8ApKCgAMDcwADwyqYAAAA+AAAAXQAAAHwAAACbAAAAugAAANkAAADwACQk/wBISP8AbGz/AJCQ
        /wC0tP8AABQ+AAAeXQAAKHwAADKbAAA8ugAARtkAAFXwACRt/wBIhf8AbJ3/AJC1/wC0zf8AACo+AAA/
        XQAAVHwAAGmbAAB+ugAAk9kAAKrwACS2/wBIwv8AbM7/AJDa/wC05v8AAD4+AABdXQAAfHwAAJubAAC6
        ugAA2dkAAPDwACT//wBI//8AbP//AJD//wC0//8AAD4qAABdPwAAfFQAAJtpAAC6fgAA2ZMAAPCqACT/
        tgBI/8IAbP/OAJD/2gC0/+YAAD4UAABdHgAAfCgAAJsyAAC6PAAA2UYAAPBVACT/bQBI/4UAbP+dAJD/
        tQC0/80AAD4AAABdAAAAfAAAAJsAAAC6AAAA2QAAAPAAACT/JABI/0gAbP9sAJD/kAC0/7QAFD4AAB5d
        AAAofAAAMpsAADy6AABG2QAAVfAAAG3/JACF/0gAnf9sALX/kADN/7QAKj4AAD9dAABUfAAAaZsAAH66
        AACT2QAAqvAAALb/JADC/0gAzv9sANr/kADm/7QAPj4AAF1dAAB8fAAAm5sAALq6AADZ2QAA8PAAAP//
        JAD//0gA//9sAP//kAD//7QAPioAAF0/AAB8VAAAm2kAALp+AADZkwAA8KoAAP+2JAD/wkgA/85sAP/a
        kAD/5rQAPhQAAF0eAAB8KAAAmzIAALo8AADZRgAA8FUAAP9tJAD/hUgA/51sAP+1kAD/zbQAPgAAAF0A
        AAB8AAAAmwAAALoAAADZAAAA8AAAAP8kJAD/SEgA/2xsAP+QkAD/tLQAPgAUAF0AHgB8ACgAmwAyALoA
        PADZAEYA8ABVAP8kbQD/SIUA/2ydAP+QtQD/tM0APgAqAF0APwB8AFQAmwBpALoAfgDZAJMA8ACqAP8k
        tgD/SMIA/2zOAP+Q2gD/tOYAPgA+AF0AXQB8AHwAmwCbALoAugDZANkA8ADwAP8k/wD/SP8A/2z/AP+Q
        /wD/tP8AKgA+AD8AXQBUAHwAaQCbAH4AugCTANkAqgDwALYk/wDCSP8Azmz/ANqQ/wDmtP8AFAA+AB4A
        XQAoAHwAMgCbADwAugBGANkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAICAgICAgICAgI
        CAgICAgACAcPDw8PDw8PDw8PDw8IAAgHDw8PDw8PDw8PDw8PCAAIBw8PDw8PDw8PDw8PDwgACAcPDw8P
        Dw8PDw8PDw8IAAgHDw8PDw8PDw8PDw8PCAAIBw8PDw8PDw8PDw8PDwgACAcPDw8PDw8PDw8PDw8IAAgH
        CAgICAgICAgICAgICAAIBwQEBAQEBA8ADwAPAAgACAcEBAQEBAQEBAQEBAQIAAgHBwcHBwcHBwcHBwcH
        CAAICAgICAgICAgICAgICAgIAAAAAAAAAAAAAAAAAAAAAP//AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAA=
</value>
  </data>
</root>